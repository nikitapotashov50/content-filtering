{"version":3,"sources":["../src/ReactAccordion.js"],"names":[],"mappings":"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","file":"ReactAccordion.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport Header from './lib/Header';\nimport ContentManager from './lib/ContentManager';\nimport { Motion, spring } from \"react-motion\";\n\nexport default class ReactAccordion extends Component {\n  static propTypes = {\n    data: PropTypes.array.isRequired,\n    options: PropTypes.object.isRequired,\n    headerAttName: PropTypes.string.isRequired,\n    itemsAttName: PropTypes.string.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    const { data } = this.props;\n    this.state = {\n      data\n    }\n  }\n\n  render() {\n    const { headerAttName, itemsAttName } = this.props;\n    const { data } = this.state;\n\n    let _refi = 0;\n    let makeHeaderRef = () => {\n      return `ListHeader-${_refi}`;\n    };\n\n    let makeItemRef = () => {\n      return `ListItem-${_refi}`;\n    };\n\n    return (\n      <div ref=\"listview\" className=\"react-accordion_outerDiv\">\n        <ul className=\"react-accordion_ul\">\n        {\n          Object.keys(data).map((k, index) => {\n          const header = data[k][headerAttName];\n          const items  = data[k][itemsAttName];\n          const { isOpened } = data[k];\n          const { height } = data[k];\n          _refi++;\n          const headerRef = makeHeaderRef();\n          const itemRef = makeItemRef();\n\n          return (\n            <Motion\n              key={index}\n              defaultStyle={{h: 0}}\n              style={{h: spring(isOpened ? height : 0)}}>\n              {\n                ({h}) => (\n                  <div>\n                    <li>\n                      <Header\n                        ref={headerRef}\n                        header={header}\n                        headerIndex={index}\n                        className=\"react-accordion_listHeader\"\n                        handleToggle={this.handleToggle.bind(this, index)}\n                      />\n                      <div\n                        style={{\n                          display: `block`,\n                          overflow: `hidden`,\n                          height:`${h}`\n                          }}>\n                        <ContentManager\n                         ref={itemRef}\n                         items={items}\n                         className=\"react-accordion_listItems\"\n                        />\n                      </div>\n                    </li>\n                  </div>\n                )\n              }\n            </Motion>\n          );\n          })\n        }\n        </ul>\n      </div>\n    );\n  }\n\n  handleToggle(headerIndex) {\n    let { data } = this.state;\n    const { options: { autoClapse } } = this.props;\n    let dataCopy = data;\n\n    if(autoClapse) {\n      dataCopy.forEach((e, index) => {\n        if(index != headerIndex) {\n          e.isOpened = false;\n        }\n      });\n    }\n\n    dataCopy[headerIndex].isOpened = !dataCopy[headerIndex].isOpened;\n    const newData = Object.assign({}, dataCopy);\n\n    this.setState(\n      newData\n    )\n  }\n}\n"]}